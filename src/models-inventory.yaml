User:
  # all the generatable modules are false,
  # so the user model only generates the Postman collection and dbdiagram files
  generate:
    model: false
    migration: false
    controller: false
    service: false
    request: false
    resource: false
    collection: false
  fields:
    name: string
    username: string:nullable
    email: string:unique
    email_verified_at: dateTime:nullable
    password: string
    avatar: string:nullable
    status: boolean:default true
    created_by: foreignId:users:nullable
    updated_by: foreignId:users:nullable
    timezone: string:nullable
    last_login_at: timestamp:nullable

Unit:
  fields:
    name: string:unique
    code: string:nullable
    description: string
    is_active: boolean:default true
    created_by: foreignId:users:nullable
    updated_by: foreignId:users:nullable
  relations:
#    creator:
#      type: belongsTo
#      model: User
#    updater:
#      type: belongsTo
#      model: User

UnitConversion:
  fields:
    from_unit_id: foreignId:units
    to_unit_id: foreignId:units
    multiplier: double:default 1
  relations:
    from_unit:
      type: belongsTo
      model: Unit
    to_unit:
      type: belongsTo
      model: Unit
  unique:
    - [ from_unit_id, to_unit_id ]

Branch:
  fields:
    name: string
    is_commissary: boolean:default false
    code: string:unique
    address: string:nullable
    phone: string:nullable
    email: string:nullable
    is_active: boolean:default true
    is_default: boolean:default false
    logo: string:nullable
    manager_id: foreignId:users:nullable
    created_by: foreignId:users:nullable
    updated_by: foreignId:users:nullable
  relations:
    manager:
      type: belongsTo
      model: User
#    creator:
#      type: belongsTo
#      model: User
#    updater:
#      type: belongsTo
#      model: User

Category:
  fields:
    name: string:unique
    code: string:unique
    description: string:nullable
    image: string:nullable
    is_active: boolean:default true
    parent_id: foreignId:categories:nullable
    created_by: foreignId:users:nullable
    updated_by: foreignId:users:nullable
  relations:
    parent:
      type: belongsTo
      model: Category
#    creator:
#      type: belongsTo
#      model: User
#    updater:
#      type: belongsTo
#      model: User

Brand:
  fields:
    name: string:unique
    description: string:nullable
    logo: string:nullable
    is_active: boolean:default true
    is_default: boolean:default false
    created_by: foreignId:users:nullable
    updated_by: foreignId:users:nullable
  relations:
#    creator:
#      type: belongsTo
#      model: User
#    updater:
#      type: belongsTo
#      model: User

Supplier:
  fields:
    name: string:unique
    contact_person: string:nullable
    email: string:nullable
    phone: string:nullable
    address: string:nullable

Product:
  fields:
    name: string:unique
    code: string:unique
    type: string
    description: text:nullable
    image: string:nullable
    is_active: boolean:default true
    is_default: boolean:default false
    created_by: foreignId:users:nullable
    updated_by: foreignId:users:nullable
  relations:
#    creator:
#      type: belongsTo
#      model: User
#    updater:
#      type: belongsTo
#      model: User

ProductUnit:
  fields:
    product_id: foreignId:products
    unit_price: double:default 0
    total_price: double:default 0
    quantity: double:default 0
    conversion_factor: double:default 1
    unit_id: foreignId:units:nullable
    brand_id: foreignId:brands:nullable
    supplier_id: foreignId:suppliers:nullable
  relations:
    product:
      type: belongsTo
      model: Product
    unit:
      type: belongsTo
      model: Unit
    brand:
      type: belongsTo
      model: Brand
    supplier:
      type: belongsTo
      model: Supplier

Recipe:
  fields:
    name: string
    description: text:nullable
    image: string:nullable
    is_active: boolean:default true
    created_by: foreignId:users:nullable
    updated_by: foreignId:users:nullable
  relations:
#    creator:
#      type: belongsTo
#      model: User
#    updater:
#      type: belongsTo
#      model: User

RecipeIngredient:
  generate:
    controller: false
    service: false
    request: false
    resource: false
    collection: false
  fields:
    recipe_id: foreignId:recipes
    product_id: foreignId:products
    quantity: decimal
    unit_id: foreignId:units:nullable
  relations:
    recipe:
      type: belongsTo
      model: Recipe
    product:
      type: belongsTo
      model: Product
    unit:
      type: belongsTo
      model: Unit

IntermediateProduct:
  fields:
    product_id: foreignId:products
    name: string
    yield: double:default 1
  relations:
    product:
      type: belongsTo
      model: Product

Purchase:
  fields:
    brand_id: foreignId:brands
    supplier_id: foreignId:suppliers
    purchase_date: date
    invoice_number: string:nullable
    status: string:default pending
  relations:
    brand:
      type: belongsTo
      model: Brand
    supplier:
      type: belongsTo
      model: Supplier

PurchaseItem:
  fields:
    purchase_id: foreignId:purchases
    product_id: foreignId:products
    unit_id: foreignId:units
    quantity: double
    unit_price: double
    total_price: double
  relations:
    purchase:
      type: belongsTo
      model: Purchase
    product:
      type: belongsTo
      model: Product
    unit:
      type: belongsTo
      model: Unit

Transfer:
  fields:
    from_branch_id: foreignId:branches
    to_branch_id: foreignId:branches
    transfer_date: dateTime:nullable
    status: string:default pending
    notes: text:nullable
    created_by: foreignId:users:nullable
    updated_by: foreignId:users:nullable
    deleted_at: softDeletes
  relations:
    from_branch:
      type: belongsTo
      model: Branch
    to_branch:
      type: belongsTo
      model: Branch
#    creator:
#      type: belongsTo
#      model: User
#    updater:
#      type: belongsTo
#      model: User

TransferItem:
  fields:
    transfer_id: foreignId:transfers
    product_id: foreignId:products
    unit_id: foreignId:units
    quantity: double
    unit_price: double:default 0
  relations:
    transfer:
      type: belongsTo
      model: Transfer
    product:
      type: belongsTo
      model: Product
    unit:
      type: belongsTo
      model: Unit

InventoryCount:
  fields:
    branch_id: foreignId:branches
    product_id: foreignId:products
    unit_id: foreignId:units
    quantity: double
    count_date: date
    deleted_at: softDeletes
  relations:
    branch:
      type: belongsTo
      model: Branch
    product:
      type: belongsTo
      model: Product
    unit:
      type: belongsTo
      model: Unit

